name: Publish Library

# 워크플로가 실행될 조건을 정의합니다.
on:
  # 1. 새 GitHub Release가 생성될 때 실행
  release:
    types: [created]
    
  # 3. GitHub UI에서 수동으로 워크플로를 실행할 수 있도록 허용
  workflow_dispatch:

# 워크플로 내에서 실행될 작업(jobs)들을 정의합니다.
jobs:
  publish: # 작업 이름 (원하는 대로 지정)
    runs-on: ubuntu-latest # 이 작업이 실행될 가상 머신 환경 (최신 Ubuntu LTS 버전)

    # 이 작업이 가질 GitHub 토큰의 권한을 명시합니다.
    # GitHub Packages 배포에는 'packages: write' 권한이 필수적입니다.
    # 'id-token: write'는 OIDC를 사용한 인증에 필요하며, Sonatype 연동 시 유용할 수 있습니다.
    permissions:
      contents: read    # 코드 읽기 (actions/checkout 액션에 필요)
      packages: write   # GitHub Packages에 패키지 쓰기
      id-token: write   # OIDC 인증 (일부 고급 시나리오에서 사용)

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4 # GitHub 리포지토리의 코드를 러너에 복사

      # 2. JDK 설정
      - name: Set up JDK 11
        uses: actions/setup-java@v4 # Java 개발 환경 설정 액션
        with:
          java-version: '11' # 사용할 JDK 버전 (프로젝트와 일치시킬 것)
          distribution: 'temurin' # JDK 배포판 (다른 옵션도 있음)
          cache: 'gradle' # Gradle 의존성 캐싱 활성화 (빌드 속도 향상)

      # 3. gradlew 실행 권한 부여 (리눅스/macOS 러너에서 필요)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew # gradlew 스크립트에 실행 권한 부여

      # 4. Gradle 속성 설정 및 배포 실행
      - name: Publish to Maven Central and GitHub Packages
        env:
          # GitHub Secrets에서 가져온 민감 정보를 환경 변수로 설정
          # 이 환경 변수들은 Gradle이 'ORG_GRADLE_PROJECT_' 접두사를 통해 프로젝트 속성으로 인식합니다.
          # Maven Central Portal credentials (from GitHub Secrets)
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          # GPG Passphrase (from GitHub Secrets)
          ORG_GRADLE_PROJECT_signing_password: ${{ secrets.SIGNING_PASSWORD }}
          # GitHub Packages credentials
          # github.actor: 현재 워크플로를 트리거한 GitHub 사용자/봇 이름 및 패스워드
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PACKAGE_TOKEN }}
          # secrets.GITHUB_TOKEN: GitHub Actions에서 기본으로 제공되는 토큰.
          #                     `packages: write` 권한이 자동으로 부여됩니다.
          ORG_GRADLE_PROJECT_gpr_key: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Gradle 빌드 및 배포 명령어 실행
          # 'publishToMavenCentral'은 com.vanniktech.maven.publish 플러그인 제공
          # 'publishMavenJavaPublicationToGitHubPackagesRepository'는 maven-publish 플러그인 제공
          ./gradlew clean build publishMavenPublicationToGitHubPackagesRepository publishMavenPublicationToMavenCentralRepository
          # 만약 vanniktech 플러그인의 release.set(true)를 사용하지 않는다면
          # Maven Central Portal에서 수동으로 'Close' -> 'Release' 과정을 진행해야 합니다.
