name: CI
on: 
  push:
    branches:
      - main

jobs:

  # JDK 호환성 테스트
  compatibility-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [8, 11, 17, 21, 25]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}

      - name: Run tests
        run: ./gradlew test -PcompatibilityTest=true --no-daemon

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run compatibility tests
        run: ./gradlew test -PcompatibilityTest=true -PtargetJava=${{ matrix.java }} --no-daemon

  # 2단계: SonarCloud 분석 (호환성 테스트 성공 후 실행)
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: compatibility-test
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # SonarCloud를 위한 전체 히스토리

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info --no-daemon
